{"name":"Vmstats probe","tagline":"escript to inject, at runtime, ferd/vmstats instrumentation into a remote BEAM VM","body":"## VmStats Probe\r\n\r\nAn [escript](http://www.erlang.org/doc/man/escript.html) to inject, at runtime, instrumentation into a remote [BEAM (Erlang) virtual machine](http://www.erlang.org/) using [vmstats](https://github.com/ferd/vmstats) and [StatsD](https://github.com/ferd/vmstats). A VM instrumented in this way will output stats to a StatsD server, until restarted.\r\n\r\n## Prereqs\r\n\r\nErlang.\r\n\r\n```\r\nbrew install erlang\r\n```\r\n\r\n## Caveats\r\n\r\nScheduler Wall clock statistics are disabled by default due to instability issues on certain Erlang versions. See the [upstream docs](https://github.com/ferd/vmstats#why-scheduler-wall-time-statistics-disabled-by-default)\r\n\r\n## Usage\r\n\r\nThe most excellent [getopt](https://github.com/jcomellas/getopt) library provides cli help.\r\n\r\n```\r\n~$ ./vmstats_probe\r\nVmstats Probe :: Adding statsd to your beam since 2015\r\nUsage: ./vmstats_probe [<node>] [-l [<lolcat>]] [-c <cookie>]\r\n[--statsd-ip [<statsd>]] [-s [<names>]]\r\n[-p [<port>]]\r\n[-w [<wall>]]\r\n\r\n<node>             Remote erlang VM node name\r\n-l, --lolz         Print erlang lolcat [default: false]\r\n-c, --cookie       Provide a cookie, if needed, to connect to remote node\r\n--statsd-ip        the IP address of StatsD UDP server. See the docs for inet:parse_address/1 for more. [default: 127.0.0.1]\r\n-s, --shortnames   Use short node names [default: false]\r\n-p, --statsd-port  StatsD UDP port number [default: 8125]\r\n-w, --enable-wall  Enable Scheduler Wall-Clock Statistics - warning, may cause instability [default: false]\r\n```\r\n\r\nExamples:\r\n\r\nLong Names:\r\n```\r\n./vmstats_probe --statsd-ip \"10.199.103.168\" farawaynode@server.example.org\r\nStarting net_kernel, using longnames...\r\nStarted net_kernel, connecting to farawaynode@server.example.org...\r\nConnected successfully! Loading modules...\r\nRemote loading completed! Starting statistics applications...\r\nRemote application start completed, output was:\r\n[ok,ok,ok,ok,ok,ok,ok,ok,ok,ok]\r\n```\r\n\r\nShort Names:\r\n```\r\n./vmstats_probe --statsd-ip \"127.0.0.1\" -s target@`hostname -s`\r\nStarting net_kernel, using shortnames...\r\nStarted net_kernel, connecting to target@BRADS_MACBOOK...\r\nConnected successfully! Loading modules...\r\nRemote loading completed! Starting statistics applications...\r\nRemote application start completed, output was:\r\n[ok,ok,ok,ok,ok,ok,ok,ok,ok,ok]\r\n```\r\n\r\nError Message if unable to connect to remote node with longnames:\r\n```\r\n./vmstats_probe --statsd-ip \"127.0.0.1\" target@fakehost.notarealdomain.org\r\nStarting net_kernel, using longnames...\r\nStarted net_kernel, connecting to target@fakehost.notarealdomain.org...\r\nNode name \"'target@fakehost.notarealdomain.org'\" not reachable.\r\nEnsure the remote node's host name is reachable from this host using DNS, and check that the remote epmd service is available from this host using telnet.\r\n```\r\n\r\nError Message if unable to connect to remote node with shortnames:\r\n```\r\n./vmstats_probe --statsd-ip \"127.0.0.1\" -s target\r\nStarting net_kernel, using shortnames...\r\nStarted net_kernel, connecting to target...\r\nNode name \"target\" not reachable.\r\nEnsure the remote node is using short names, and has \"@BRADS_MACBOOK\" at the end.\r\n```\r\n\r\nFor the StatsD IP address, use a string parseable by the [inet erlang library](http://www.erlang.org/doc/man/inet.html).\r\n```\r\n./vmstats_probe --statsd-ip \"{127,0,0,1} bad arg.\" -s target@`hostname -s`\r\nUnable to parse StatsD IP address config.\r\n```\r\n\r\n## How do I remove the remote-loaded code from the remote node?\r\n\r\nAt this time, you don't - you *must* restart the remote VM. The change to add\r\nthe code to the VM isn't persisted to disk, so a restart will wipe it clean.\r\nIt will be possible to add remote *uninstallation* functionality in a later\r\nrelease.\r\n\r\n## Building\r\n\r\n```\r\nrebar get-deps clean compile escriptize && ./vmstats_probe\r\n```\r\n\r\n### Compatibility\r\n\r\nThis script was (manually) tested on:\r\n\r\n- Erlang R15B01, platform: Darwin\r\n- Erlang R15B03, platform: Darwin\r\n- Erlang R16B03-1, platform: Darwin\r\n- Erlang 17.4, platform: Darwin\r\n\r\nI would expect mixing different runtime versions and platforms for the escript itself and the remote target of the escript will get bad results, but you never know. Of course, YMMV.\r\n\r\n### Props List\r\n\r\nFred Herbert -> creator of epic awesome Erlang libraries [recon](https://github.com/ferd/recon) and [vmstats](https://github.com/ferd/vmstats)\r\n\r\nEtsy         -> creator of [StatsD](https://github.com/etsy/statsd)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}